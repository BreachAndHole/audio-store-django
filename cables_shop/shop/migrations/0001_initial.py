# Generated by Django 4.0.4 on 2022-06-09 08:14

import django.db.models.deletion
import django.db.models.manager
import phonenumber_field.modelfields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(max_length=70, unique=True, verbose_name='email')),
                ('first_name', models.CharField(max_length=50, verbose_name='имя')),
                ('last_name', models.CharField(max_length=50, verbose_name='фамилия')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region='RU', unique=True, verbose_name='номер телефона')),
                ('is_staff', models.BooleanField(default=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_superuser', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'пользователь',
                'verbose_name_plural': 'пользователи',
            },
            managers=[
                ('object', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Cable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='название')),
                ('slug', models.SlugField(verbose_name='URL')),
                ('length_sm', models.PositiveSmallIntegerField(default=0, verbose_name='длина, см.')),
                ('price', models.PositiveIntegerField(default=0, verbose_name='цена, руб.')),
                ('units_in_stock', models.PositiveSmallIntegerField(verbose_name='количество в наличии')),
                ('description', models.TextField(blank=True, null=True, verbose_name='описание')),
            ],
            options={
                'verbose_name': 'кабель',
                'verbose_name_plural': 'кабели',
                'ordering': ('type', 'price'),
            },
        ),
        migrations.CreateModel(
            name='CableType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True, verbose_name='название (ед.ч)')),
                ('name_plural', models.CharField(max_length=50, verbose_name='название (мн.ч)')),
                ('slug', models.SlugField(verbose_name='URL')),
                ('description', models.TextField(blank=True, null=True, verbose_name='описание')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='photos/cable_types/', verbose_name='фото')),
            ],
            options={
                'verbose_name': 'тип кабеля',
                'verbose_name_plural': 'типы кабелей',
                'ordering': ('pk',),
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_accepted_date', models.DateField(auto_now_add=True, verbose_name='дата оформления заказа')),
                ('order_last_update_date', models.DateField(auto_now_add=True, verbose_name='дата последнего обновления заказа')),
                ('status', models.CharField(choices=[('IC', 'В корзине'), ('AC', 'Принят'), ('CO', 'Выполнен')], default='IC', max_length=10, verbose_name='статус заказа')),
                ('delivery_type', models.CharField(choices=[('PU', 'Самовывоз'), ('DE', 'Доставка')], default='DE', max_length=10, verbose_name='способ получения')),
                ('customer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='покупатель')),
            ],
            options={
                'verbose_name': 'заказ',
                'verbose_name_plural': 'заказы',
            },
        ),
        migrations.CreateModel(
            name='ShippingAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=200, null=True, verbose_name='адрес')),
                ('city', models.CharField(max_length=50, null=True, verbose_name='город')),
                ('state', models.CharField(max_length=70, null=True, verbose_name='область')),
                ('zipcode', models.CharField(max_length=10, null=True, verbose_name='почтовый индекс')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='покупатель')),
            ],
            options={
                'verbose_name': 'адрес доставки',
                'verbose_name_plural': 'адреса доставки',
            },
        ),
        migrations.CreateModel(
            name='OrderedProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.SmallIntegerField(default=0, verbose_name='заказанное количество')),
                ('date_added', models.DateTimeField(auto_now_add=True, verbose_name='время добавления')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.order', verbose_name='заказ')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.cable', verbose_name='товар')),
            ],
            options={
                'verbose_name': 'заказанный товар',
                'verbose_name_plural': 'заказанные товары',
            },
        ),
        migrations.AddField(
            model_name='order',
            name='shipping_address',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='shop.shippingaddress', verbose_name='адресс доставки'),
        ),
        migrations.CreateModel(
            name='CablePhoto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(upload_to='photos/cable_photos/%Y/%m', verbose_name='фото')),
                ('is_title', models.BooleanField(verbose_name='является титульным')),
                ('cable', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.cable', verbose_name='кабель')),
            ],
            options={
                'verbose_name': 'фото',
                'verbose_name_plural': 'фотографии',
                'ordering': ('pk', '-is_title'),
            },
        ),
        migrations.AddField(
            model_name='cable',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='shop.cabletype'),
        ),
    ]
